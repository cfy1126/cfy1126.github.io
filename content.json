{"meta":{"title":"美好事物","subtitle":"","description":"知行合一","author":"LinkinCao","url":"http://example.com","root":"/"},"pages":[{"title":"categories","date":"2022-06-29T15:39:40.000Z","updated":"2022-07-09T00:30:14.602Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"link","date":"2022-06-29T15:40:29.000Z","updated":"2022-07-09T00:30:14.602Z","comments":true,"path":"link/index.html","permalink":"http://example.com/link/index.html","excerpt":"","text":""},{"title":"tags","date":"2022-06-29T15:37:20.000Z","updated":"2022-07-09T00:30:14.602Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"分辨率让我emmo","slug":"分辨率让我emmo","date":"2022-07-08T19:07:55.000Z","updated":"2022-07-09T00:30:14.602Z","comments":true,"path":"2022/07/08/分辨率让我emmo/","link":"","permalink":"http://example.com/2022/07/08/%E5%88%86%E8%BE%A8%E7%8E%87%E8%AE%A9%E6%88%91emmo/","excerpt":"","text":"物理分辨率： 显示屏最高可显示的像素 分辨率：可调节改变 物理像素：设备像素点 逻辑像素（css像素）：iphone6举例；逻辑像素375px 物理像素750px 像素比（dpr: device pixel ratio) 计算公式：同一方向的物理像素&#x2F;css像素 dpr &#x3D; 2 表示1个css像素需要2*2个设备像素来绘制 缩放： 缩放逻辑像素 PPI(DPI): 每英寸像素点 感谢大神奉献：()[https://blog.csdn.net/qq_34115899/article/details/105566707]","categories":[],"tags":[{"name":"电脑","slug":"电脑","permalink":"http://example.com/tags/%E7%94%B5%E8%84%91/"}]},{"title":"我的垃圾电脑为啥可以播放4k视频？","slug":"我的垃圾电脑为啥可以播放4k视频？","date":"2022-07-08T18:02:27.000Z","updated":"2022-07-09T00:30:14.602Z","comments":true,"path":"2022/07/08/我的垃圾电脑为啥可以播放4k视频？/","link":"","permalink":"http://example.com/2022/07/08/%E6%88%91%E7%9A%84%E5%9E%83%E5%9C%BE%E7%94%B5%E8%84%91%E4%B8%BA%E5%95%A5%E5%8F%AF%E4%BB%A5%E6%92%AD%E6%94%BE4k%E8%A7%86%E9%A2%91%EF%BC%9F/","excerpt":"","text":"最后以我个人的经验来看（再次强调以下都是基于互联网上各类传播的经验，与理论并不是那么紧密），播放设备与片源的分辨率差距在3倍大概是人眼能分辨的极限，比如一个720p的屏幕（常见垃圾笔记本），放4K仍然比放1080p有肉眼可见的提升，但是放8K比放4K就看不出来啥了，所以说分辨率高真的很有用！ 转载于: ()[https://www.bilibili.com/read/cv6233898/]html中空格汇总：()[https://www.jianshu.com/p/160e5cb0209c]","categories":[],"tags":[{"name":"电脑","slug":"电脑","permalink":"http://example.com/tags/%E7%94%B5%E8%84%91/"}]},{"title":"小程序实战项目-商城-首页","slug":"小程序实战项目-商城-首页","date":"2022-07-08T14:56:41.000Z","updated":"2022-07-09T00:30:14.602Z","comments":true,"path":"2022/07/08/小程序实战项目-商城-首页/","link":"","permalink":"http://example.com/2022/07/08/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%9E%E6%88%98%E9%A1%B9%E7%9B%AE-%E5%95%86%E5%9F%8E-%E9%A6%96%E9%A1%B5/","excerpt":"","text":"搜索栏广告位 轮播图组件属性 autoplay 自动播放 indicator-dots 图片圆点 circular 循环播放 菜单产品","categories":[],"tags":[{"name":"wechat","slug":"wechat","permalink":"http://example.com/tags/wechat/"}]},{"title":"flex布局","slug":"flex布局","date":"2022-07-08T10:42:53.000Z","updated":"2022-07-09T00:30:14.602Z","comments":true,"path":"2022/07/08/flex布局/","link":"","permalink":"http://example.com/2022/07/08/flex%E5%B8%83%E5%B1%80/","excerpt":"","text":"用于父元素的属性 justify-content 主轴元素排列方式 center flex-start flex-end space-between space-around space-evenly 间隔均匀分布 align-items 交叉轴的元素排列方式 flex-direction 排列方式 flex-wrap 元素是否可换行 用于子元素的属性 flex-grow 占据盒子剩余空间 flex-grow: 1 flex-shrink 不换行是否可压缩 flex-shrink: 0 flex-basis 盒子初始值 flex 前三项的缩写 flex-grow: 1 等价于 flex: 1 align-self 覆盖父元素指定交叉轴的属性align-items order 指定元素的排列顺序；order越大排序越后 z-order 元素重叠时，值较大的会在上层显示","categories":[],"tags":[{"name":"css","slug":"css","permalink":"http://example.com/tags/css/"}]},{"title":"小程序云开发","slug":"小程序云开发","date":"2022-07-07T12:36:39.000Z","updated":"2022-07-09T00:30:14.602Z","comments":true,"path":"2022/07/07/小程序云开发/","link":"","permalink":"http://example.com/2022/07/07/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%BA%91%E5%BC%80%E5%8F%91/","excerpt":"","text":"上传数据到云端12345678910111213141516171819// 初始化云端数据库const db = wx.cloud.database()const products = db.collection(&#x27;products&#x27;)Page(&#123; data: &#123;&#125;, onSubmit(event) &#123; //添加数据到云端 products .add(&#123; data: &#123; ...event.detail.value, &#125;, &#125;) .then((res) =&gt; &#123; console.log(res) &#125;) &#125;,&#125;) 从云端获取数据1234567891011121314151617// 初始化云端数据库const db = wx.cloud.database()const products = db.collection(&#x27;products&#x27;)Page(&#123; data: &#123; products: [], &#125;, onLoad() &#123; //从云端获取数据 products.get().then((res) =&gt; &#123; this.setData(&#123; products: res.data, &#125;) &#125;) &#125;,&#125;) 修改删除云数据12345678910111213141516171819202122232425262728293031323334353637383940414243// 初始化云端数据库const db = wx.cloud.database()const products = db.collection(&#x27;products&#x27;)Page(&#123; data: &#123; product: &#123;&#125;, &#125;, onLoad(options) &#123; // 获取导航传过来的值 let id = options.id products .doc(id) .get() .then((res) =&gt; &#123; this.setData(&#123; product: res.data, &#125;) &#125;) &#125;, update() &#123; //修改云端数据 products .doc(this.data.product._id) .update(&#123; data: &#123; price: 399, &#125;, &#125;) .then((res) =&gt; &#123; console.log(res) &#125;) &#125;, del() &#123; // 删除云端数据 products .doc(this.data.product._id) .remove() .then((res) =&gt; &#123; console.log(res) &#125;) &#125;,&#125;) 云函数上传并部署云函数需安装: npm install –save wx-server-sdk@latest 添加数据云函数： 123456789101112131415161718192021// 云函数入口文件const cloud = require(&#x27;wx-server-sdk&#x27;)cloud.init(&#123; // 指定环境 evn: &#x27;invoice-inhand-9g86mm1bfec63201&#x27;,&#125;)const db = cloud.database()// 云函数入口函数exports.main = async (event, context) =&gt; &#123; const wxContext = cloud.getWXContext() //指定云函数功能 return db.collection(&#x27;users&#x27;).add(&#123; data: &#123; name: event.name, pwd: event.pwd, _openid: wxContext.OPENID, &#125;, &#125;)&#125; 调用云函数： 12345678910111213141516Page(&#123; onLoad() &#123; // 调用云函数做添加操作 wx.cloud .callFunction(&#123; name: &#x27;addUser&#x27;, data: &#123; name: &#x27;Caofayou&#x27;, pwd: &#x27;123456&#x27;, &#125;, &#125;) .then((res) =&gt; &#123; console.log(res) &#125;) &#125;,&#125;) 登录 数据获取处理 非空校验和格式校验 错误提示 页面跳转 保存用户信息 处理用户数据： 登录成功和失败： 123456789101112131415161718192021222324users .where(&#123; name: username, pwd: pwd, &#125;) .get() .then((res) =&gt; &#123; // 登录成功 if (res.data[0] == null) &#123; this.setData(&#123; show: true, &#125;) return &#125; else &#123; //登录失败 this.setData(&#123; show: false, &#125;) app.appUser = res.data[0] wx.redirectTo(&#123; url: &#x27;../index/index&#x27;, &#125;) &#125; &#125;)","categories":[],"tags":[{"name":"wechat","slug":"wechat","permalink":"http://example.com/tags/wechat/"}]},{"title":"网页单位汇总","slug":"网页单位汇总","date":"2022-07-07T09:43:08.000Z","updated":"2022-07-09T00:30:14.602Z","comments":true,"path":"2022/07/07/网页单位汇总/","link":"","permalink":"http://example.com/2022/07/07/%E7%BD%91%E9%A1%B5%E5%8D%95%E4%BD%8D%E6%B1%87%E6%80%BB/","excerpt":"","text":"em: 相对于父元素rem: 相对于根元素","categories":[],"tags":[{"name":"css","slug":"css","permalink":"http://example.com/tags/css/"}]},{"title":"前端下载图片","slug":"download-picture","date":"2022-07-06T22:39:56.000Z","updated":"2022-07-09T00:30:14.602Z","comments":true,"path":"2022/07/06/download-picture/","link":"","permalink":"http://example.com/2022/07/06/download-picture/","excerpt":"","text":"前端下载api返回为图片格式 123456789101112131415161718192021const downloadDocument = async () =&gt; &#123; const res = await http.get(`$&#123;path&#125;?user_id=caofy@inhand.com.cn`, &#123; responseType: &#x27;blob&#x27;, &#125;) downFile(res.data, &#x27;download&#x27;)&#125;const downFile = (data, name) =&gt; &#123; if (!data) &#123; alert(&#x27;数据错误！&#x27;) return &#125; let BLOB = new Blob([data]) let url = window.URL.createObjectURL(BLOB) let link = document.createElement(&#x27;a&#x27;) link.style.display = &#x27;none&#x27; link.href = url link.setAttribute(&#x27;download&#x27;, name) document.body.appendChild(link) link.click()&#125;","categories":[],"tags":[{"name":"Javascript","slug":"Javascript","permalink":"http://example.com/tags/Javascript/"}]},{"title":"react-pdf简单使用","slug":"React-PDF","date":"2022-07-06T22:27:14.000Z","updated":"2022-07-09T00:30:14.602Z","comments":true,"path":"2022/07/06/React-PDF/","link":"","permalink":"http://example.com/2022/07/06/React-PDF/","excerpt":"","text":"参考demo: https://github.com/recoding-io/react-videos/tree/main/react-pdf-viewer 官方文档: https://projects.wojtekmaj.pl/react-pdf/","categories":[],"tags":[{"name":"React","slug":"React","permalink":"http://example.com/tags/React/"}]},{"title":"uppy简单使用","slug":"uppy","date":"2022-07-06T22:20:10.000Z","updated":"2022-07-09T00:30:14.602Z","comments":true,"path":"2022/07/06/uppy/","link":"","permalink":"http://example.com/2022/07/06/uppy/","excerpt":"","text":"参考demo: https://github.com/cfy1126/react-upload-uppy 官方文档: https://uppy.io/docs/","categories":[],"tags":[{"name":"React","slug":"React","permalink":"http://example.com/tags/React/"}]}],"categories":[],"tags":[{"name":"电脑","slug":"电脑","permalink":"http://example.com/tags/%E7%94%B5%E8%84%91/"},{"name":"wechat","slug":"wechat","permalink":"http://example.com/tags/wechat/"},{"name":"css","slug":"css","permalink":"http://example.com/tags/css/"},{"name":"Javascript","slug":"Javascript","permalink":"http://example.com/tags/Javascript/"},{"name":"React","slug":"React","permalink":"http://example.com/tags/React/"}]}